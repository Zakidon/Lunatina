---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import TagComponent from '../../../components/Tag.astro';
import '../../../styles/base.css';
import '../../../styles/components.css';
import '../../../styles/themes.css';

const { tag } = Astro.params as { tag: string };

const slugify = (text: string): string => {
  const map: Record<string, string> = {
    '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'yo', '–∂': 'zh',
    '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm', '–Ω': 'n', '–æ': 'o',
    '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u', '—Ñ': 'f', '—Ö': 'kh', '—Ü': 'ts',
    '—á': 'ch', '—à': 'sh', '—â': 'sch', '—ã': 'y', '—ç': 'e', '—é': 'yu', '—è': 'ya',
  };
  return text
    .toLowerCase()
    .split('')
    .map(char => map[char] || char)
    .join('')
    .replace(/[^a-z0-9]/g, '-')
    .replace(/-+/g, '-')
    .replace(/^-|-$/g, '');
};

export async function getStaticPaths() {
  const posts: CollectionEntry<'blog'>[] = await getCollection('blog');
  const allTags: string[] = [...new Set(posts.flatMap(post => post.data.tags))];
  return allTags.map(tag => ({
    params: { tag: slugify(tag) },
  }));
}

const posts: CollectionEntry<'blog'>[] = await getCollection('blog', ({ data }) => {
  return data.tags.some(t => slugify(t) === tag);
});
---

<Layout title={`–ü–æ—Å—Ç—ã —Å —Ç–µ–≥–æ–º "${tag}"`} description={`–í—Å–µ –ø–æ—Å—Ç—ã —Å —Ç–µ–≥–æ–º ${tag} –Ω–∞ –±–ª–æ–≥–µ –õ—É–Ω–∞—Ç–∏–Ω—ã`}>
  <div class="container py-8">
    <h1 class="text-3xl font-bold mb-4 text-gray-900 dark:text-white">–ü–æ—Å—Ç—ã —Å —Ç–µ–≥–æ–º "{tag}"</h1>
    {posts.length === 0 ? (
      <p class="text-gray-600 dark:text-gray-300">–ù–µ—Ç –ø–æ—Å—Ç–æ–≤ —Å —ç—Ç–∏–º —Ç–µ–≥–æ–º. üòî</p>
    ) : (
      <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {posts.map(post => (
          <li class="bg-gradient-to-br from-emerald-50 to-purple-50 dark:from-emerald-900 dark:to-purple-900 p-4 rounded-lg shadow-sm">
            <a href={`/blog/${post.slug}`}>
              <img
                src={post.data.image || '/images/placeholder.jpg'}
                alt={post.data.title}
                class="w-full h-48 object-cover object-center rounded-lg mb-4"
              />
              <h2 class="text-xl font-semibold text-gray-900 dark:text-white">{post.data.title}</h2>
              <p class="text-gray-600 dark:text-gray-300 text-sm mt-2">{post.data.description}</p>
              <div class="mt-4 flex flex-wrap gap-2">
                {post.data.tags.map(t => (
                  <TagComponent tag={t} />
                ))}
              </div>
            </a>
          </li>
        ))}
      </ul>
    )}
  </div>
</Layout>